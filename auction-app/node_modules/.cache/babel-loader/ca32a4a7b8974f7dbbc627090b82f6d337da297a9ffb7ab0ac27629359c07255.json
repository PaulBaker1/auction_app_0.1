{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Paul\\\\Desktop\\\\v0.1 - Copy - Copy\\\\auction-app\\\\src\\\\components\\\\BidForm.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import { createBid } from '../services/api';\n// import { Form, Button } from 'react-bootstrap';\n//\n// const BidForm = ({ itemId, onBidPlaced }) => {\n//     const [amount, setAmount] = useState('');\n//     const [userId, setUserId] = useState('');\n//     const [userEmail, setUserEmail] = useState('');\n//\n//     const handleSubmit = (event) => {\n//         event.preventDefault();\n//         createBid(itemId, { amount, userId })\n//             .then(response => {\n//                 alert('Bid placed successfully!');\n//                 setAmount('');\n//                 setUserEmail('');\n//                 //setUserId('');\n//                 onBidPlaced();\n//             })\n//             .catch(error => {\n//                 alert('Failed to place bid');\n//             });\n//     };\n//\n//     return (\n//         <Form onSubmit={handleSubmit}>\n//             <Form.Group controlId=\"formBidAmount\">\n//                 <Form.Label>Amount</Form.Label>\n//                 <Form.Control\n//                     type=\"number\"\n//                     value={amount}\n//                     onChange={(e) => setAmount(e.target.value)}\n//                     placeholder=\"Enter bid amount\"\n//                 />\n//             </Form.Group>\n//             <Form.Group controlId=\"formUserId\">\n//                 <Form.Label>User ID</Form.Label>\n//                 <Form.Control\n//                     type=\"text\"\n//                     // value={userId}\n//                     value={userEmail}\n//                     onChange={(e) => setUserId(e.target.value)}\n//                     placeholder=\"Enter user Email\"\n//                 />\n//             </Form.Group>\n//             <Button variant=\"primary\" type=\"submit\">\n//                 Place Bid\n//             </Button>\n//         </Form>\n//     );\n// }\n//\n// export default BidForm;\n\nimport React, { useState } from 'react';\nimport { createBid } from '../services/api';\nimport { Form, Button } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BidForm = ({\n  itemId,\n  onBidPlaced\n}) => {\n  _s();\n  const [amount, setAmount] = useState('');\n  const [userEmail, setUserEmail] = useState('');\n  const handleSubmit = event => {\n    event.preventDefault();\n    createBid(itemId, {\n      amount,\n      userEmail\n    }) // Using userEmail instead of userId\n    .then(response => {\n      alert('Bid placed successfully!');\n      setAmount('');\n      setUserEmail(''); // Clearing userEmail instead of userId\n      onBidPlaced();\n    }).catch(error => {\n      alert('Failed to place bid');\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n      controlId: \"formBidAmount\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"number\",\n        value: amount,\n        onChange: e => setAmount(e.target.value),\n        placeholder: \"Enter bid amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      controlId: \"formUserEmail\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"User Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"email\",\n        value: userEmail,\n        onChange: e => setUserEmail(e.target.value),\n        placeholder: \"Enter user email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      type: \"submit\",\n      children: \"Place Bid\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n};\n_s(BidForm, \"Z8p5TbqkWkO9IfspDTX4YOM543E=\");\n_c = BidForm;\nexport default BidForm;\nvar _c;\n$RefreshReg$(_c, \"BidForm\");","map":{"version":3,"names":["React","useState","createBid","Form","Button","jsxDEV","_jsxDEV","BidForm","itemId","onBidPlaced","_s","amount","setAmount","userEmail","setUserEmail","handleSubmit","event","preventDefault","then","response","alert","catch","error","onSubmit","children","Group","controlId","Label","fileName","_jsxFileName","lineNumber","columnNumber","Control","type","value","onChange","e","target","placeholder","variant","_c","$RefreshReg$"],"sources":["C:/Users/Paul/Desktop/v0.1 - Copy - Copy/auction-app/src/components/BidForm.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import { createBid } from '../services/api';\r\n// import { Form, Button } from 'react-bootstrap';\r\n//\r\n// const BidForm = ({ itemId, onBidPlaced }) => {\r\n//     const [amount, setAmount] = useState('');\r\n//     const [userId, setUserId] = useState('');\r\n//     const [userEmail, setUserEmail] = useState('');\r\n//\r\n//     const handleSubmit = (event) => {\r\n//         event.preventDefault();\r\n//         createBid(itemId, { amount, userId })\r\n//             .then(response => {\r\n//                 alert('Bid placed successfully!');\r\n//                 setAmount('');\r\n//                 setUserEmail('');\r\n//                 //setUserId('');\r\n//                 onBidPlaced();\r\n//             })\r\n//             .catch(error => {\r\n//                 alert('Failed to place bid');\r\n//             });\r\n//     };\r\n//\r\n//     return (\r\n//         <Form onSubmit={handleSubmit}>\r\n//             <Form.Group controlId=\"formBidAmount\">\r\n//                 <Form.Label>Amount</Form.Label>\r\n//                 <Form.Control\r\n//                     type=\"number\"\r\n//                     value={amount}\r\n//                     onChange={(e) => setAmount(e.target.value)}\r\n//                     placeholder=\"Enter bid amount\"\r\n//                 />\r\n//             </Form.Group>\r\n//             <Form.Group controlId=\"formUserId\">\r\n//                 <Form.Label>User ID</Form.Label>\r\n//                 <Form.Control\r\n//                     type=\"text\"\r\n//                     // value={userId}\r\n//                     value={userEmail}\r\n//                     onChange={(e) => setUserId(e.target.value)}\r\n//                     placeholder=\"Enter user Email\"\r\n//                 />\r\n//             </Form.Group>\r\n//             <Button variant=\"primary\" type=\"submit\">\r\n//                 Place Bid\r\n//             </Button>\r\n//         </Form>\r\n//     );\r\n// }\r\n//\r\n// export default BidForm;\r\n\r\nimport React, { useState } from 'react';\r\nimport { createBid } from '../services/api';\r\nimport { Form, Button } from 'react-bootstrap';\r\n\r\nconst BidForm = ({ itemId, onBidPlaced }) => {\r\n    const [amount, setAmount] = useState('');\r\n    const [userEmail, setUserEmail] = useState('');\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        createBid(itemId, { amount, userEmail }) // Using userEmail instead of userId\r\n            .then(response => {\r\n                alert('Bid placed successfully!');\r\n                setAmount('');\r\n                setUserEmail(''); // Clearing userEmail instead of userId\r\n                onBidPlaced();\r\n            })\r\n            .catch(error => {\r\n                alert('Failed to place bid');\r\n            });\r\n    };\r\n\r\n    return (\r\n        <Form onSubmit={handleSubmit}>\r\n            <Form.Group controlId=\"formBidAmount\">\r\n                <Form.Label>Amount</Form.Label>\r\n                <Form.Control\r\n                    type=\"number\"\r\n                    value={amount}\r\n                    onChange={(e) => setAmount(e.target.value)}\r\n                    placeholder=\"Enter bid amount\"\r\n                />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formUserEmail\">\r\n                <Form.Label>User Email</Form.Label>\r\n                <Form.Control\r\n                    type=\"email\"\r\n                    value={userEmail}\r\n                    onChange={(e) => setUserEmail(e.target.value)}\r\n                    placeholder=\"Enter user email\"\r\n                />\r\n            </Form.Group>\r\n            <Button variant=\"primary\" type=\"submit\">\r\n                Place Bid\r\n            </Button>\r\n        </Form>\r\n    );\r\n}\r\n\r\nexport default BidForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}