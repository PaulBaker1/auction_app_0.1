{"ast":null,"code":"// import React, { useState } from 'react';\n// import { createBid } from '../services/api';\n// import { Form, Button } from 'react-bootstrap';\n//\n// const BidForm = ({ itemId, onBidPlaced }) => {\n//     const [amount, setAmount] = useState('');\n//     const [userId, setUserId] = useState('');\n//     const [userEmail, setUserEmail] = useState('');\n//\n//     const handleSubmit = (event) => {\n//         event.preventDefault();\n//         createBid(itemId, { amount, userId })\n//             .then(response => {\n//                 alert('Bid placed successfully!');\n//                 setAmount('');\n//                 setUserEmail('');\n//                 //setUserId('');\n//                 onBidPlaced();\n//             })\n//             .catch(error => {\n//                 alert('Failed to place bid');\n//             });\n//     };\n//\n//     return (\n//         <Form onSubmit={handleSubmit}>\n//             <Form.Group controlId=\"formBidAmount\">\n//                 <Form.Label>Amount</Form.Label>\n//                 <Form.Control\n//                     type=\"number\"\n//                     value={amount}\n//                     onChange={(e) => setAmount(e.target.value)}\n//                     placeholder=\"Enter bid amount\"\n//                 />\n//             </Form.Group>\n//             <Form.Group controlId=\"formUserId\">\n//                 <Form.Label>User ID</Form.Label>\n//                 <Form.Control\n//                     type=\"text\"\n//                     // value={userId}\n//                     value={userEmail}\n//                     onChange={(e) => setUserId(e.target.value)}\n//                     placeholder=\"Enter user Email\"\n//                 />\n//             </Form.Group>\n//             <Button variant=\"primary\" type=\"submit\">\n//                 Place Bid\n//             </Button>\n//         </Form>\n//     );\n// }\n//\n// export default BidForm;\nimport React,{useState}from'react';import{createBid}from'../services/api';import{Form,Button}from'react-bootstrap';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const BidForm=_ref=>{let{itemId,onBidPlaced}=_ref;const[amount,setAmount]=useState('');const[userEmail,setUserEmail]=useState('');const handleSubmit=event=>{event.preventDefault();createBid(itemId,{amount,userEmail})// Using userEmail instead of userId\n.then(response=>{alert('Bid placed successfully!');setAmount('');setUserEmail('');// Clearing userEmail instead of userId\nonBidPlaced();}).catch(error=>{alert('Failed to place bid');});};return/*#__PURE__*/_jsxs(Form,{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(Form.Group,{controlId:\"formBidAmount\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Amount\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"number\",value:amount,onChange:e=>setAmount(e.target.value),placeholder:\"Enter bid amount\"})]}),/*#__PURE__*/_jsxs(Form.Group,{controlId:\"formUserEmail\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"User Email\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"email\",value:userEmail,onChange:e=>setUserEmail(e.target.value),placeholder:\"Enter user email\"})]}),/*#__PURE__*/_jsx(Button,{variant:\"primary\",type:\"submit\",children:\"Place Bid\"})]});};export default BidForm;","map":{"version":3,"names":["React","useState","createBid","Form","Button","jsx","_jsx","jsxs","_jsxs","BidForm","_ref","itemId","onBidPlaced","amount","setAmount","userEmail","setUserEmail","handleSubmit","event","preventDefault","then","response","alert","catch","error","onSubmit","children","Group","controlId","Label","Control","type","value","onChange","e","target","placeholder","variant"],"sources":["C:/Users/Paul/Desktop/v0.1 - Copy - Copy/auction-app/src/components/BidForm.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import { createBid } from '../services/api';\r\n// import { Form, Button } from 'react-bootstrap';\r\n//\r\n// const BidForm = ({ itemId, onBidPlaced }) => {\r\n//     const [amount, setAmount] = useState('');\r\n//     const [userId, setUserId] = useState('');\r\n//     const [userEmail, setUserEmail] = useState('');\r\n//\r\n//     const handleSubmit = (event) => {\r\n//         event.preventDefault();\r\n//         createBid(itemId, { amount, userId })\r\n//             .then(response => {\r\n//                 alert('Bid placed successfully!');\r\n//                 setAmount('');\r\n//                 setUserEmail('');\r\n//                 //setUserId('');\r\n//                 onBidPlaced();\r\n//             })\r\n//             .catch(error => {\r\n//                 alert('Failed to place bid');\r\n//             });\r\n//     };\r\n//\r\n//     return (\r\n//         <Form onSubmit={handleSubmit}>\r\n//             <Form.Group controlId=\"formBidAmount\">\r\n//                 <Form.Label>Amount</Form.Label>\r\n//                 <Form.Control\r\n//                     type=\"number\"\r\n//                     value={amount}\r\n//                     onChange={(e) => setAmount(e.target.value)}\r\n//                     placeholder=\"Enter bid amount\"\r\n//                 />\r\n//             </Form.Group>\r\n//             <Form.Group controlId=\"formUserId\">\r\n//                 <Form.Label>User ID</Form.Label>\r\n//                 <Form.Control\r\n//                     type=\"text\"\r\n//                     // value={userId}\r\n//                     value={userEmail}\r\n//                     onChange={(e) => setUserId(e.target.value)}\r\n//                     placeholder=\"Enter user Email\"\r\n//                 />\r\n//             </Form.Group>\r\n//             <Button variant=\"primary\" type=\"submit\">\r\n//                 Place Bid\r\n//             </Button>\r\n//         </Form>\r\n//     );\r\n// }\r\n//\r\n// export default BidForm;\r\n\r\nimport React, { useState } from 'react';\r\nimport { createBid } from '../services/api';\r\nimport { Form, Button } from 'react-bootstrap';\r\n\r\nconst BidForm = ({ itemId, onBidPlaced }) => {\r\n    const [amount, setAmount] = useState('');\r\n    const [userEmail, setUserEmail] = useState('');\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        createBid(itemId, { amount, userEmail }) // Using userEmail instead of userId\r\n            .then(response => {\r\n                alert('Bid placed successfully!');\r\n                setAmount('');\r\n                setUserEmail(''); // Clearing userEmail instead of userId\r\n                onBidPlaced();\r\n            })\r\n            .catch(error => {\r\n                alert('Failed to place bid');\r\n            });\r\n    };\r\n\r\n    return (\r\n        <Form onSubmit={handleSubmit}>\r\n            <Form.Group controlId=\"formBidAmount\">\r\n                <Form.Label>Amount</Form.Label>\r\n                <Form.Control\r\n                    type=\"number\"\r\n                    value={amount}\r\n                    onChange={(e) => setAmount(e.target.value)}\r\n                    placeholder=\"Enter bid amount\"\r\n                />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formUserEmail\">\r\n                <Form.Label>User Email</Form.Label>\r\n                <Form.Control\r\n                    type=\"email\"\r\n                    value={userEmail}\r\n                    onChange={(e) => setUserEmail(e.target.value)}\r\n                    placeholder=\"Enter user email\"\r\n                />\r\n            </Form.Group>\r\n            <Button variant=\"primary\" type=\"submit\">\r\n                Place Bid\r\n            </Button>\r\n        </Form>\r\n    );\r\n}\r\n\r\nexport default BidForm;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,OAASC,SAAS,KAAQ,iBAAiB,CAC3C,OAASC,IAAI,CAAEC,MAAM,KAAQ,iBAAiB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE/C,KAAM,CAAAC,OAAO,CAAGC,IAAA,EAA6B,IAA5B,CAAEC,MAAM,CAAEC,WAAY,CAAC,CAAAF,IAAA,CACpC,KAAM,CAACG,MAAM,CAAEC,SAAS,CAAC,CAAGb,QAAQ,CAAC,EAAE,CAAC,CACxC,KAAM,CAACc,SAAS,CAAEC,YAAY,CAAC,CAAGf,QAAQ,CAAC,EAAE,CAAC,CAE9C,KAAM,CAAAgB,YAAY,CAAIC,KAAK,EAAK,CAC5BA,KAAK,CAACC,cAAc,CAAC,CAAC,CACtBjB,SAAS,CAACS,MAAM,CAAE,CAAEE,MAAM,CAAEE,SAAU,CAAC,CAAE;AAAA,CACpCK,IAAI,CAACC,QAAQ,EAAI,CACdC,KAAK,CAAC,0BAA0B,CAAC,CACjCR,SAAS,CAAC,EAAE,CAAC,CACbE,YAAY,CAAC,EAAE,CAAC,CAAE;AAClBJ,WAAW,CAAC,CAAC,CACjB,CAAC,CAAC,CACDW,KAAK,CAACC,KAAK,EAAI,CACZF,KAAK,CAAC,qBAAqB,CAAC,CAChC,CAAC,CAAC,CACV,CAAC,CAED,mBACId,KAAA,CAACL,IAAI,EAACsB,QAAQ,CAAER,YAAa,CAAAS,QAAA,eACzBlB,KAAA,CAACL,IAAI,CAACwB,KAAK,EAACC,SAAS,CAAC,eAAe,CAAAF,QAAA,eACjCpB,IAAA,CAACH,IAAI,CAAC0B,KAAK,EAAAH,QAAA,CAAC,QAAM,CAAY,CAAC,cAC/BpB,IAAA,CAACH,IAAI,CAAC2B,OAAO,EACTC,IAAI,CAAC,QAAQ,CACbC,KAAK,CAAEnB,MAAO,CACdoB,QAAQ,CAAGC,CAAC,EAAKpB,SAAS,CAACoB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CAC3CI,WAAW,CAAC,kBAAkB,CACjC,CAAC,EACM,CAAC,cACb5B,KAAA,CAACL,IAAI,CAACwB,KAAK,EAACC,SAAS,CAAC,eAAe,CAAAF,QAAA,eACjCpB,IAAA,CAACH,IAAI,CAAC0B,KAAK,EAAAH,QAAA,CAAC,YAAU,CAAY,CAAC,cACnCpB,IAAA,CAACH,IAAI,CAAC2B,OAAO,EACTC,IAAI,CAAC,OAAO,CACZC,KAAK,CAAEjB,SAAU,CACjBkB,QAAQ,CAAGC,CAAC,EAAKlB,YAAY,CAACkB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CAC9CI,WAAW,CAAC,kBAAkB,CACjC,CAAC,EACM,CAAC,cACb9B,IAAA,CAACF,MAAM,EAACiC,OAAO,CAAC,SAAS,CAACN,IAAI,CAAC,QAAQ,CAAAL,QAAA,CAAC,WAExC,CAAQ,CAAC,EACP,CAAC,CAEf,CAAC,CAED,cAAe,CAAAjB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}